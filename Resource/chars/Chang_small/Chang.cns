[Data]
Life = 1000
Power = 5000
attack = 100
defence = 110
fall.defence_up = 50
liedown.time = 9
airjuggle = 15
sparkno = 2
guard.sparkno = 40
KO.echo = 0
volume = 255
IntPersistIndex = 60
FloatPersistIndex = 40

[Size]
xscale = 1
yscale = 1
ground.back = 16
ground.front = 16
air.back = 12
air.front = 12
height = 80
attack.dist = 160
proj.attack.dist = 90
proj.doscale = 0
head.pos = 4, -104
mid.pos = 0, -52
shadowoffset = 0
draw.offset = 0,0

[Velocity]
walk.fwd  = 1.825
walk.back = -1.7689
run.fwd  = 4.258964,0
run.back = -4.5,-3.8
jump.neu = 0,-7.63911199569702
jump.back = -1.90
jump.fwd = 2.0
runjump.back = -2.55,-8.1
runjump.fwd = 4,-8.1
airjump.neu = 0,-5.724561274
airjump.back = -2.55
airjump.fwd = 2.5



[Movement]
airjump.num = 0       ;Number of air jumps allowed (opt)
airjump.height = 35   ;Minimum distance from ground before you can air jump (opt)
yaccel = .481612889766693          ;Vertical acceleration
stand.friction = .85  ;Friction coefficient when standing
crouch.friction = .82 ;Friction coefficient when crouching
stand.friction.threshold = 2          ;If player's speed drops below this threshold while standing, stop his movement **MUGEN 1.0**
crouch.friction.threshold = .05       ;If player's speed drops below this threshold while crouching, stop his movement **MUGEN 1.0**
air.gethit.groundlevel = 25           ;Y-position at which a falling player is considered to hit the ground **MUGEN 1.0**
air.gethit.groundrecover.ground.threshold = -20 ;Y-position below which falling player can use the recovery command **MUGEN 1.0**
air.gethit.groundrecover.groundlevel = 10   ;Y-position at which player in the ground recovery state touches the ground **MUGEN 1.0**
air.gethit.airrecover.threshold = -1  ;Y-velocity above which player may use the air recovery command **MUGEN 1.0**
air.gethit.airrecover.yaccel = .35    ;Vertical acceleration for player in the air recovery state **MUGEN 1.0**
air.gethit.trip.groundlevel = 15      ;Y-position at which player in the tripped state touches the ground **MUGEN 1.0**
down.bounce.offset = 0, 20            ;Offset for player bouncing off the ground (x, y) **MUGEN 1.0**
down.bounce.yaccel = .4               ;Vertical acceleration for player bouncing off the ground **MUGEN 1.0**
down.bounce.groundlevel = 12          ;Y-position at which player bouncing off the ground touches the ground again **MUGEN 1.0**
down.friction.threshold = .05         ;If the player's speed drops below this threshold while lying down, stop his movement **MUGEN 1.0**

;---------------------------------------
;======================================
;Var List:
;Var(0)  = Combo Var 1(CMD File)
;Var(1)  = Combo Var 2(CMD File)
;Var(2)  = Combo Var 3(CMD File)
;Var(3)  = Jump Var
;Var(6)  = Slow Motion
;Var(8)  = Juggle Fix
;Var(9)  = K.O. Helper Fix
;Var(10) = Calculo de posicion de Cabeza
;Var(12) = Drop Target in Normal Throws Moves
;Var(15) = Counter Code Main Var
;Var(16) = Counter Code Full Var
;Var(20) = Random End Move | Pause for slice End move
;Var(21) = Super Damage Limitier
;Var(30) = Hidden Move - Detect Is Hidden Activate
;Var(31) = Hidden Move - Hitcound Acumulator
;Var(32) = Hidden Move - Target Life Set
;Var(33) = Hidden Move - Set Finish Time
;Var(34) = Hidden Move - Total Damage
;Var(35) = Hidden Move - Set Power
;Var(59) = AI on/off
;---------------------------------------
;Float Var List:
;FVar(3)  = Hidden Move - Reduce Damage to super value
;FVar(17) = Corner Push code by Yong Ming
;---------------------------------------
;Channel List
;1: Intro & Winner main Voice
;2: Jump sound
;3: Run sound | In SDM Run too
;4: Taunt
;5: Special Move Combine snd
;6: Special Move Combine snd
;7: Trow
;======================================
;---------------------------------------


;--------------------------------|End Chang.cns|--------------------------------
